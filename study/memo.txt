c++의 제곱근 구하는 방법 -> cmath 패키지 안에 sqrt(double/float/long double n) 을 사용

int의 범위는 대략 최대 22억 ~ -22억

//많은 양의 입출력을 수행하는 경우 cin.tie(null)이 필수이다.
//또한 endl 출력의 경우 줄바꿈 역할 이외에 flush 연산도 수행된다. 이는 가벼운 연산이 아님과 더불어 수만번의 누적 수행은
//tle로 이어질수 있다.

배열의 초기 고정 할당은 int 변수명[배열 크기];

c++ 구조체 -> 사용자 정의 데이터 형식 
1.struct 키워드 사용 -> 데이터 형식 사용시 struct 키워드를 붙여야한다 ex) struct Point p1;
2.typedef struct 키워드를 사용해서 구조체 정의 -> struct 필요 없음 ex) Point p1;
구조체 멤버는 중괄호를 사용하여 초기화가 가능하다. ex) Point p1 = {1 , 0};
또한 점 연산자를 이용하여 멤버에 접근이 가능하다. ex) p1.x = 10;
구조체 배열, 포인터 또한 사용이 가능하다.
구조체 안에 구조체의 멤버를 이용한 함수의 정의가 가능하다.

c++ vector의 크기는 vector.size() 


c++ stack은 후입선출 
push()는 삽입, pop()은 가장 마지막에 넣은 값을 삭제, top()은 가장 마지막에 넣은 값을 반환한다.

while문 -> 반복 조건문이 true인동안 반복한다.

c++ vector 에서 원소를 지우는 방법
erase(iterator) : erase 함수는 인자로 주어진 주소의 원소를 삭제한다. 즉 인자는 iterator이다. vec.begin()+i= i번째 원소의 주소를 표현가능하다

c++ min max = 2가지 인자만 받는다 여러가지의 수 중에서 min max 값을 찾기 위해서는 각 수를 vector에 넣어 길이 3이상의 vector를 만든후
그 vector를 반복 탐색하여 최소값을 찾는다(즉 min(int x, int y) 의 형태를 하고 있으며 vector(min 변수, vector[i])로 탐색하며 min 변수값을 변화시킨다.)

char str1[] = "a b c d e f"; 
해당 문자열을 공백을 기준으로 나누고 싶기때문에 strtok 에 공백을 넣어 줍니다. char * tok1 = strtok (str1, " "); str1을 공백으로 나눈다.

c++ 동적 배열 할당
cin >> length;
int* arr = new int[length];

c++ char to int
char a = '4';
int ia = a - '0';

vector sort 방법
algorithm의 sort 
sort(vec.begin(),vec.end()) // 오름차순
sort(vec.begin(),vec.end(),desc) //내림차순

memset(*void 초기화 하고싶은 배열, 원하는 초기화 값, 초기화 하고 싶은 바이트의 바이트 개수),
memset의 마지막 부분을 조심하셔야 합니다. 배열의 개수가 아니고 바이트의 개수 입니다 
따라서 a라는 일차원(10개의 방) 배열을 0으로 초기화하기 위해서는 아래와 같이 사용하시면 됩니다.
memset(a,0,sizeof(a));

c++ char형 한줄로 입력될때 한글자씩 
for(int i = 0; i < n; i++){
        char* line = new char[n];
        cin >> line;
        for(int j = 0; j < n; j++){
            char num = line[j];
            arr[i][j] = num -'0';
        }
        delete [] line;
    }

strncmp()으로 문자열 비교

#include <iostream>
#include <string.h>

using namespace std;
int strncmp(const char* s1, const char* s2, size_t count);
    
int main()
{
    char s1[] = "Hello";
    char s2[] = "Hell";

    int result= strncmp(s1, s2, 5);

    if (result == 0)
        cout << "s1 = s2";
    else if (result > 0)
        cout << "s1 > s2";
    else if (result < 0)
        cout << "s1 < s2";
}